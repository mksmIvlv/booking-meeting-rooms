// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230609091231_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.BookingMeetingRoom", b =>
                {
                    b.Property<Guid>("IdBooking")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateMeeting")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTimeMeeting")
                        .HasColumnType("time without time zone");

                    b.Property<Guid>("MeetingRoomId")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("StartTimeMeeting")
                        .HasColumnType("time without time zone");

                    b.HasKey("IdBooking");

                    b.HasIndex("MeetingRoomId");

                    b.ToTable("BookingMeetingRooms");

                    b.HasData(
                        new
                        {
                            IdBooking = new Guid("a7af2f7e-4d47-4bcb-809e-461f95e3111a"),
                            DateMeeting = new DateOnly(2023, 10, 25),
                            EndTimeMeeting = new TimeOnly(11, 0, 0),
                            MeetingRoomId = new Guid("7c0a2d75-b56b-4473-9cc5-e76e9591cc6d"),
                            StartTimeMeeting = new TimeOnly(10, 0, 0)
                        });
                });

            modelBuilder.Entity("Domain.Models.MeetingRoom", b =>
                {
                    b.Property<Guid>("IdRoom")
                        .HasColumnType("uuid");

                    b.Property<string>("DescriptionRoom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NameRoom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdRoom");

                    b.HasIndex("NameRoom")
                        .IsUnique()
                        .HasDatabaseName("NameIndex");

                    b.ToTable("MeetingRooms");

                    b.HasData(
                        new
                        {
                            IdRoom = new Guid("7c0a2d75-b56b-4473-9cc5-e76e9591cc6d"),
                            DescriptionRoom = "Описание переговорной комнаты.",
                            NameRoom = "Переговорная комната 1."
                        },
                        new
                        {
                            IdRoom = new Guid("63d0cfca-2905-4ce9-98fc-f65f0c5116f2"),
                            DescriptionRoom = "Описание переговорной комнаты.",
                            NameRoom = "Переговорная комната 2."
                        },
                        new
                        {
                            IdRoom = new Guid("777757dc-e177-45ba-ac25-8e178fe5a0e2"),
                            DescriptionRoom = "Описание переговорной комнаты.",
                            NameRoom = "Переговорная комната 3."
                        },
                        new
                        {
                            IdRoom = new Guid("96ef5235-77b1-4060-aa8d-f543c17deda4"),
                            DescriptionRoom = "Описание переговорной комнаты.",
                            NameRoom = "Переговорная комната 4."
                        },
                        new
                        {
                            IdRoom = new Guid("73e4e1b7-fc6f-42ed-8179-80e129c571d8"),
                            DescriptionRoom = "Описание переговорной комнаты.",
                            NameRoom = "Переговорная комната 5."
                        });
                });

            modelBuilder.Entity("Domain.Models.BookingMeetingRoom", b =>
                {
                    b.HasOne("Domain.Models.MeetingRoom", null)
                        .WithMany("BookingMeetingRooms")
                        .HasForeignKey("MeetingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.MeetingRoom", b =>
                {
                    b.Navigation("BookingMeetingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
