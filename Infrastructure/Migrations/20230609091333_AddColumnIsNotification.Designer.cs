// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230609091333_AddColumnIsNotification")]
    partial class AddColumnIsNotification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.BookingMeetingRoom", b =>
                {
                    b.Property<Guid>("IdBooking")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateMeeting")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTimeMeeting")
                        .HasColumnType("time without time zone");

                    b.Property<bool>("IsNotification")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MeetingRoomId")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("StartTimeMeeting")
                        .HasColumnType("time without time zone");

                    b.HasKey("IdBooking");

                    b.HasIndex("MeetingRoomId");

                    b.ToTable("BookingMeetingRooms");
                });

            modelBuilder.Entity("Domain.Models.MeetingRoom", b =>
                {
                    b.Property<Guid>("IdRoom")
                        .HasColumnType("uuid");

                    b.Property<string>("DescriptionRoom")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NameRoom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdRoom");

                    b.HasIndex("NameRoom")
                        .IsUnique()
                        .HasDatabaseName("NameIndex");

                    b.ToTable("MeetingRooms");
                });

            modelBuilder.Entity("Domain.Models.BookingMeetingRoom", b =>
                {
                    b.HasOne("Domain.Models.MeetingRoom", null)
                        .WithMany("BookingMeetingRooms")
                        .HasForeignKey("MeetingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.MeetingRoom", b =>
                {
                    b.Navigation("BookingMeetingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
